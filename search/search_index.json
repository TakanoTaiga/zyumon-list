{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ZYUMON-LIST","text":"<p>git: <pre><code>git config --global user.name \"Taiga Takano\"\ngit config --global user.email ttttghghnb554z@outlook.jp\n</code></pre></p> <p>build <pre><code>colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release\n</code></pre> <pre><code>colcon build --symlink-install --merge-install --cmake-args -DCMAKE_BUILD_TYPE=Release\n</code></pre></p> <p>vscode <pre><code>/opt/ros/humble/include/**\n</code></pre> <pre><code>/usr/include/**\n</code></pre></p> <p>ament_clang_format <pre><code>ament_clang_format --clang-format-version 14 --reformat\n</code></pre></p> <p>\u9ed2\u9b54\u8853\u306e\u546a\u6587\u30ea\u30b9\u30c8</p> <ul> <li>ROS2</li> <li>Docker</li> <li>Performance Analysis</li> <li>CI/CD</li> </ul>"},{"location":"analysis/","title":"Check CPU status","text":"<ul> <li>Check CPU Freq     <pre><code>cat /proc/cpuinfo | grep MHz\n</code></pre></li> </ul>"},{"location":"analysis/#cpufrequtils","title":"cpufrequtils","text":"<ul> <li>install cpufrequitl     <pre><code>sudo apt install cpufrequtils\n</code></pre></li> <li>perf setting     <pre><code>sudo apt install linux-tools-`uname -r`\nsudo sh -c 'echo -1 &gt; /proc/sys/kernel/perf_event_paranoid'\nsudo sh -c 'echo 0 &gt; /proc/sys/kernel/kptr_restrict'\n</code></pre></li> </ul> <ul> <li>setting cpu freq     <pre><code>sudo vim /etc/default/cpufrequtils\n\nENABLE=\"true\"\nGOVERNOR=\"powersave\"\nMAX_SPEED=2.61GHz\nMIN_SPEED=2.60GHz\n</code></pre></li> <li>service restart     <pre><code>sudo service cpufrequtils restart\n</code></pre></li> </ul>"},{"location":"ci-cd/","title":"CI/CD","text":"<ul> <li>ROS2 Build test     TakanoTaiga/ros2-ci<pre><code>name: Build test\non:\npull_request:\n    branches: [ main ]\npush:\n    branches: [ main ]\njobs:\nbuild-and-test:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checking out\n        uses: actions/checkout@v2.3.4\n    - name: Building and testing\n        uses: TakanoTaiga/ros2-ci@v1.0.1\n</code></pre> </li> </ul> <ul> <li>MkDocs     <pre><code>name: publish-pages \non:\npush:\n    branches:\n    - master \n    - main\npermissions:\ncontents: write\njobs:\ndeploy:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n    - uses: actions/setup-python@v4\n        with:\n        python-version: 3.x\n    - run: pip3 install -U wheel\n    - run: pip3 install fontawesome_markdown markdown mdx_truly_sane_lists mkdocs mkdocs-awesome-pages-plugin mkdocs-exclude mkdocs-macros-plugin mkdocs-material mkdocs-same-dir mkdocs-static-i18n mike plantuml-markdown pymdown-extensions python-markdown-math\n    - run: pip3 install -U git+https://github.com/jimporter/mike\n    - run: pip3 install mkdocs-material \n    - run: mkdocs gh-deploy --force\n</code></pre></li> </ul>"},{"location":"docker/","title":"Docker","text":"<ul> <li>install docker <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  \"$(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\")\" stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre></li> </ul> <ul> <li>without sudo     <pre><code>sudo usermod -aG docker $USER &amp;&amp; newgrp docker\n</code></pre></li> <li>restart docker     <pre><code>sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart docker\n</code></pre></li> </ul> <ul> <li>arm64 Ubuntu     <pre><code>docker run -it --name test arm64v8/ubuntu:focal\n</code></pre></li> </ul> <ul> <li>Attach new shell     <pre><code>docker exec -it CONTAINER bash\n</code></pre></li> <li>Launch Isaac ROS     <pre><code>cd ~/workspaces/isaac_ros-dev/src/isaac_ros_common &amp;&amp; ./scripts/run_dev.sh\n</code></pre></li> </ul>"},{"location":"ros2/","title":"ROS2","text":"<ul> <li>colcon build     <pre><code>colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release --cargo-args --release\n</code></pre></li> <li>colcon options     <pre><code>--packages-up-to\n</code></pre><pre><code>--symlink-install\n</code></pre> <p><pre><code>--merge-install\n</code></pre> - rosdep   <pre><code>rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO\n</code></pre></p> </li> </ul> <ul> <li>Add Serial Permission<pre><code>sudo gpasswd --add $USER dialout\nreboot\n</code></pre> </li> </ul>"}]}